name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    defaults:
      run:
        working-directory: ./package

    strategy:
      matrix:
        node-version:
          - 20.x
          - 22.x
          - 23.x

    name: Node ${{ matrix.node-version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install Dependencies
        run: npm install --ignore-scripts --no-audit --no-fund

      - name: Lint files
        run: npm run lint

      - name: Typecheck files
        run: npm run typecheck

      - name: Build library
        run: npm run all

  release:
    needs: build

    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)

    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    defaults:
      run:
        working-directory: ./package

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          always-auth: true
          registry-url: https://npm.pkg.github.com/
          scope: ketch-com
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Publish (pkg.github)
        run: npm publish --provenance --ignore-scripts --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          always-auth: true
          registry-url: https://registry.npmjs.com/
          scope: ketch-com
          cache: "npm"
          cache-dependency-path: '**/package-lock.json'

      - name: Publish (npmjs)
        run: npm publish --provenance --ignore-scripts --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
